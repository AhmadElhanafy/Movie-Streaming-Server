name: Build and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build & Push Backend
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/${REPO_OWNER}/movie-backend:${{ github.sha }} ./Server/Api
          docker push ghcr.io/${REPO_OWNER}/movie-backend:${{ github.sha }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build & Push Frontend
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/${REPO_OWNER}/movie-frontend:${{ github.sha }} ./Web/client
          docker push ghcr.io/${REPO_OWNER}/movie-frontend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Package Helm chart
        run: |
          helm package ./Helm/movieapp --destination ./artifacts
          ls -lh ./artifacts

      - name: Connect GitHub runner to Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Copy Helm chart package to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.K3S_SERVER }}
          username: ${{ secrets.K3S_USER }}
          key: ${{ secrets.K3S_SSH_KEY }}
          source: "artifacts/*.tgz"
          target: "/home/${{ secrets.K3S_USER }}/"

      - name: Apply Database Migrations
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.K3S_SERVER }}
          username: ${{ secrets.K3S_USER }}
          key: ${{ secrets.K3S_SSH_KEY }}
          script: |
            export GITHUB_SHA=${{ github.sha }}
            export CONNECTION_STRING="Host=postgres-postgresql.db.svc.cluster.local;Port=5432;Database=movies;Username=postgres;Password=${{ secrets.DB_PASSWORD }}"
      
            cat <<EOF | kubectl apply -f -
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: backend-db-migration-${GITHUB_SHA}
              namespace: movieapp
            spec:
              template:
                spec:
                  containers:
                  - name: migration-container
                    image: "ghcr.io/ahmadelhanafy/movie-backend:${GITHUB_SHA}"
                    command: ["dotnet", "ef", "database", "update"]
                    env:
                    - name: ConnectionStrings__DefaultConnection
                      value: "${CONNECTION_STRING}"
                  restartPolicy: OnFailure
            EOF
            
            sleep 5
            
            kubectl wait --for=condition=complete job/backend-db-migration-${GITHUB_SHA} --timeout=5m
            kubectl delete job backend-db-migration-${GITHUB_SHA}

      - name: Deploy to k3s via Helm
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.K3S_SERVER }}
          username: ${{ secrets.K3S_USER }}
          key: ${{ secrets.K3S_SSH_KEY }}
          script: |
            export GITHUB_SHA=${{ github.sha }}

            CHART=$(ls ~/artifacts/movieapp-0.1.0.tgz | sort | tail -n1)

            helm upgrade --install movieapp $CHART \
              --namespace movieapp \
              --create-namespace \
              --set backend.image.tag=${GITHUB_SHA} \
              --set frontend.image.tag=${GITHUB_SHA}
